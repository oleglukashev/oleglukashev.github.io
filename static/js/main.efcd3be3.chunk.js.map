{"version":3,"sources":["ducks/Map.js","reducers/index.js","ducks/Areas.js","ducks/Tracks.js","sagas/index.js","store.js","layouts/App.js","components/Area/index.js","components/Curve/Curve.js","components/Track/index.js","router.js","index.js"],"names":["update","map","dispatch","type","payload","initialState","center","zoom","reducers","combineReducers","routing","routerReducer","state","action","Object","assign","areas","concat","item","id","index","indexOf","slice","tracks","sagas","middlewares","thunk","push","routerMiddleware","browserHistory","sagaMiddleware","createSagaMiddleware","middleware","applyMiddleware","store","createStore","history","syncHistoryWithStore","run","App","collapseOpen","openCollapse","setState","closeCollapse","navbar_classes","this","className","onClick","href","to","activeClassName","props","children","React","Component","Area","connect","currentArea","data","name","latlng","radius","color","getAll","prevProps","length","area","new_id","options","layer","newItem","layerType","getBounds","getCenter","getLatLngs","remove","alert","target","lat","lng","filter","key","Button","selectArea","bind","size","deleteArea","Map","onDragend","_onDrag","TileLayer","attribution","url","FeatureGroup","position","onEdited","_onEditPath","onCreated","_onCreate","onDeleted","_onDeleted","draw","polygon","circle","rectangle","polyline","circlemarker","marker","edit","Circle","Polygon","positions","Curve","option","L","curve","getOptions","fromProps","toProps","leafletElement","setPath","setStyleIfChanged","Path","propTypes","PropTypes","oneOfType","arrayOf","node","object","array","isRequired","withLeaflet","Track","currentTrack","path","track","selectTrack","Marker","Popup","router","component","ReactDOM","render","document","getElementById"],"mappings":"wSAQO,SAASA,EAAOC,GACrB,OAAO,SAAAC,GACL,OAAOA,EANF,CAAEC,KAHQ,aAGUC,QAMCH,KAK9B,IAAMI,EAAe,CACnBC,OAAQ,CAAC,OAAQ,OACjBC,KAAM,GCVD,IAAMC,EAAWC,YAAgB,CACtCC,QAASC,gBACTV,IDWa,WAAqD,IAApCW,EAAmC,uDAA3BP,EAAcQ,EAAa,uDAAJ,GAC7D,OAAQA,EAAOV,MACb,IAAK,aACH,OAAOW,OAAOC,OAAO,GAAIF,EAAOT,SAClC,QACE,OAAOQ,ICfXI,MCkEa,WAA2C,IAA1BJ,EAAyB,uDAAjB,GAAIC,EAAa,uDAAJ,GACnD,OAAQA,EAAOV,MACb,IAAK,cACH,OAAOW,OAAOC,OAAO,GAAIF,EAAOT,SAClC,IAAK,eACH,OAAOQ,EAAMK,OAAO,CAACJ,EAAOT,UAC9B,IAAK,eACH,OAAOQ,EAAMX,KAAI,SAACiB,GAChB,OAAIA,EAAKC,KAAON,EAAOM,GAEdD,EAGF,eACFA,EADL,GAEKL,EAAOT,YAGhB,IAAK,eACH,IAAMgB,EAAQR,EAAMS,QAAQR,EAAOT,SACnC,MAAM,GAAN,mBAAWQ,EAAMU,MAAM,EAAGF,IAA1B,YAAqCR,EAAMU,MAAMF,EAAQ,KAC3D,QAAS,OAAOR,IDtFlBW,OEuEa,WAA2C,IAA1BX,EAAyB,uDAAjB,GAAIC,EAAa,uDAAJ,GACnD,OAAQA,EAAOV,MACb,IAAK,eACH,OAAOW,OAAOC,OAAO,GAAIF,EAAOT,SAClC,QAAS,OAAOQ,M,oCCrFHY,GAAV,SAAUA,IAAV,iGCSP,IAAIC,EAAc,CAACC,KAGnBD,EAAYE,KAAKC,2BAAiBC,MAGlC,IAAMC,EAAiBC,cACvBN,EAAYE,KAAKG,GAQjB,IAAIE,EAAaC,IAAe,WAAf,EAAmBR,GAQpC,IAAMS,EAAQC,YAAY3B,EAAUwB,GAC9BI,EAAUC,+BAAqBR,IAAgBK,GACrDJ,EAAeQ,IAAId,G,8CC9BEe,G,iNACnB3B,MAAQ,CACN4B,cAAc,G,EAGhBC,aAAe,WACb,EAAKC,SAAS,CACZF,cAAc,K,EAIlBG,cAAgB,WACd,EAAKD,SAAS,CACZF,cAAc,K,wEAIR,IAEJI,EAAiB,2BAKrB,OANyBC,KAAKjC,MAAtB4B,eAGNI,GAAkB,SAIlB,6BAASzB,GAAG,WACV,yBAAKA,GAAG,eAAe2B,UAAU,4EAC/B,yBAAKA,UAAU,mBACb,4BAAQA,UAAU,iBAAiB3C,KAAK,SAAS4C,QAASF,KAAKJ,cAC7D,0BAAMK,UAAU,yBAGlB,yBAAKA,UAAWF,EAAgBG,QAASF,KAAKF,eAC5C,yBAAKG,UAAU,oCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,uBAAGE,KAAK,KAAR,SAIF,yBAAKF,UAAU,wBACb,4BAAQA,UAAU,iBAAiBC,QAASF,KAAKF,cAAexC,KAAK,UAAS,+BAAa,mCAIjG,wBAAI2C,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMG,GAAG,IAAIC,gBAAgB,SAASJ,UAAU,YAAhD,UAKF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMG,GAAG,UAAUC,gBAAgB,SAASJ,UAAU,YAAtD,eASV,yBAAKA,UAAU,gBACZD,KAAKM,MAAMC,e,GA/DWC,IAAMC,Y,sEC8LxBC,EA/KdC,aAVD,SAAyB5C,EAAOuC,GAI9B,MAAO,CACLnC,MAJYJ,EAAMI,MAKlBf,IAJUW,EAAMX,O,8MAgBlBW,MAAQ,CACN6C,YAAa,M,oFAKbvD,EADqB2C,KAAKM,MAAlBjD,ULOL,WACL,IAAMwD,EAAO,CACX,CAACvC,GAAI,EAAGwC,KAAM,eAAgBxD,KAAM,SAAUyD,OAAQ,CAAC,OAAQ,OAAQC,OAAQ,IAAOC,MAAO,SAC7F,CAAC3C,GAAI,EAAGwC,KAAM,cAAexD,KAAM,SAAUyD,OAAQ,CAAC,OAAQ,OAAQC,OAAQ,IAAOC,MAAO,QAC5F,CAAC3C,GAAI,EAAGwC,KAAM,eAAgBxD,KAAM,UAAWyD,OAAQ,CACnD,CAAC,OAAQ,OACT,CAAC,OAAQ,MACT,CAAC,OAAQ,MACT,CAAC,OAAQ,QACRE,MAAO,QAGd,OAAO,SAAA5D,GACL,OAAOA,EA7CF,CAAEC,KAPS,cAOUC,QA6CCsD,KKnBlBK,M,yCAGQC,GAAY,IACrBhD,EAAU6B,KAAKM,MAAfnC,OACHgD,EAAUhD,MAAMiD,QAAUjD,EAAMiD,QACnCpB,KAAKH,SAAS,CAAEe,YAAazC,EAAM,O,gCAI7B0C,GAAO,ILaIQ,EKbL,EACcrB,KAAKM,MAAzBnC,EADM,EACNA,MAAOd,EADD,EACCA,SACTiE,EAASnD,EAAMA,EAAMiD,OAAS,GAAG9C,GAAK,EACtCiD,EAAUV,EAAKW,MAAMD,QACvBE,EAAU,CACZnD,GAAIgD,EACJR,KAAM,UAAYQ,EAClBhE,KAAMuD,EAAKa,UACXT,MAAOM,EAAQN,OAGM,WAAnBJ,EAAKa,WACPD,EAAQV,OAASF,EAAKW,MAAMG,YAAYC,YACxCH,EAAQT,OAASO,EAAQP,QACG,YAAnBH,EAAKa,YACdD,EAAQV,OAASF,EAAKW,MAAMK,cAG9BxE,GLLmBgE,EKKHI,ELJX,SAAApE,GACL,OAAOA,EA/CF,CAAEC,KAVU,eAUUC,QA+CC8D,OKI5BrB,KAAKH,SAAS,CAAEe,YAAaa,IAG7BZ,EAAKW,MAAMM,SAEXC,MAAMN,EAAQV,U,8BAGRF,GACN,IAAME,EAASF,EAAKmB,OAAOJ,aAE3BvE,EADqB2C,KAAKM,MAAlBjD,UACCF,EAAO,CACdM,OAAQ,CAACsD,EAAOkB,IAAKlB,EAAOmB,KAC5BxE,KAAMmD,EAAKmB,OAAOT,QAAQ7D,U,iCAInB2D,GAAO,IAAD,EACarB,KAAKM,MAAzBnC,EADO,EACPA,OACRd,EAFe,EACAA,ULZZ,SAAgBgE,GACrB,OAAO,SAAAhE,GACL,OAAOA,EAnDF,CAAEC,KAhBU,eAgBUC,QAmDC8D,KKWnBS,CAAOT,IACXrB,KAAKjC,MAAM6C,aAAeZ,KAAKjC,MAAM6C,YAAYtC,KAAO+C,EAAK/C,IAChE0B,KAAKH,SAAS,CAAEe,YAAazC,EAAMgE,QAAO,SAAA9D,GAAI,OAAIA,EAAKC,KAAO+C,EAAK/C,MAAI,O,iCAIhE+C,GACTrB,KAAKH,SAAS,CAAEe,YAAaS,M,+BAGrB,IAAD,OACCjE,EAAQ4C,KAAKM,MAAblD,IACAwD,EAAgBZ,KAAKjC,MAArB6C,YACAzC,EAAU6B,KAAKM,MAAfnC,MACR,OACE,yBAAK8B,UAAU,WACb,yBAAKA,UAAU,uCACb,wBAAIA,UAAU,aAAd,SACA,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,SACf,+BACE,4BACE,oCACA,wBAAIA,UAAU,cAAd,aAGJ,+BACG9B,EAAMf,KAAI,SAACiE,GACV,OACE,wBAAIe,IAAKf,EAAK/C,GAAI2B,UAAWW,GAAeS,EAAK/C,KAAOsC,EAAYtC,GAAK,WAAa,IACpF,4BAAK+C,EAAKP,MACV,wBAAIb,UAAU,cACZ,kBAACoC,EAAA,EAAD,CACEnC,QAAS,EAAKoC,WAAWC,KAAK,EAAMlB,GACpCJ,MAAM,UACNuB,KAAK,KACLlF,KAAK,SACL2C,UAAU,kBACV,0BAAMA,UAAU,uBACd,uBAAGA,UAAU,kBAGjB,kBAACoC,EAAA,EAAD,CACEnC,QAAS,EAAKuC,WAAWF,KAAK,EAAMlB,GACpCJ,MAAM,SACNuB,KAAK,KACLlF,KAAK,SACL2C,UAAU,kBACV,0BAAMA,UAAU,uBACd,uBAAGA,UAAU,8BAS5BW,GACC,yBAAKX,UAAU,OACb,kBAACoC,EAAA,EAAD,CACEnC,QAASF,KAAKsC,WAAWC,KAAKvC,KAAM,MACpCC,UAAU,QACVgB,MAAM,UACNuB,KAAK,KACLlF,KAAK,UALP,sBAUR,yBAAK2C,UAAU,8BACb,kBAACyC,EAAA,EAAD,CAAKjF,OAAQL,EAAIK,OAAQC,KAAMN,EAAIM,KAAMiF,UAAW3C,KAAK4C,QAAQL,KAAKvC,OACpE,kBAAC6C,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,6CAEN,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,SAAS,WACTC,SAAUlD,KAAKmD,YACfC,UAAWpD,KAAKqD,UAAUd,KAAKvC,MAC/BsD,UAAWtD,KAAKuD,WAChBC,KAAM,CACJC,SAAU7C,EACV8C,QAAS9C,EACT+C,WAAW,EACXC,UAAU,EACVC,cAAc,EACdC,QAAQ,GAEVC,KAAM,CACJA,MAAM,EACNjC,QAAQ,MAGblB,GAAoC,WAArBA,EAAYtD,MAC1B,kBAAC0G,EAAA,EAAD,CACEvG,OAAQmD,EAAYG,OACpBC,OAAQJ,EAAYI,OACpBC,MAAOL,EAAYK,QAEtBL,GAAoC,YAArBA,EAAYtD,MAC1B,kBAAC2G,EAAA,EAAD,CACEC,UAAWtD,EAAYG,OACvBE,MAAOL,EAAYK,e,GApKhBR,e,4ECjBb0D,G,mMACiB7D,GAAQ,IACnB4D,EAAkC5D,EAAlC4D,UAAWE,EAAuB9D,EAAvB8D,OAAW7C,EADJ,YACgBjB,EADhB,wBAE1B,OAAO+D,IAAEC,MAAMJ,EAAWE,EAAQpE,KAAKuE,WAAWhD,M,2CAG/BiD,EAAWC,GAC1BA,EAAQP,YAAcM,EAAUN,WAClClE,KAAK0E,eAAeC,QAAQF,EAAQP,WAEtClE,KAAK4E,kBAAkBJ,EAAWC,O,GAVlBI,MAcpBV,EAAMW,UAAY,CAChBvE,SAAUwE,IAAUC,UAAU,CAC5BD,IAAUE,QAAQF,IAAUG,MAC5BH,IAAUG,OAEZd,OAAQW,IAAUI,OAClBjB,UAAWa,IAAUK,MAAMC,YAGdC,I,EAAAA,cAAYnB,G,UCgGZoB,GAxGd5E,aAVD,SAAyB5C,GAIvB,MAAO,CACLW,OAJaX,EAAMW,OAKnBtB,IAJUW,EAAMX,O,8MAgBlBW,MAAQ,CACNyH,aAAc,M,oFAKdnI,EADqB2C,KAAKM,MAAlBjD,UNzBL,WACL,IAAMwD,EAAO,CACX,CACEvC,GAAI,EACJwC,KAAM,UACN2E,KAAM,CACJ,IAAK,CAAC,kBAAmB,eACzB,IAAK,CAAC,kBAAmB,mBACzB,CAAC,kBAAmB,mBACpB,IAAK,CAAC,mBAAoB,gBAE5B1E,OAAQ,CACN,CAAC,kBAAmB,eACpB,CAAC,kBAAmB,mBACpB,CAAC,mBAAoB,gBAEvBE,MAAO,SAET,CACE3C,GAAI,EACJwC,KAAM,UACN2E,KAAM,CACJ,IAAK,CAAC,kBAAmB,eACzB,IAAK,CAAC,kBAAmB,mBACzB,CAAC,kBAAmB,mBACpB,IAAK,CAAC,mBAAoB,gBAE5B1E,OAAQ,CACN,CAAC,kBAAmB,eACpB,CAAC,kBAAmB,mBACpB,CAAC,mBAAoB,gBAEvBE,MAAO,QAET,CACE3C,GAAI,EACJwC,KAAM,UACN2E,KAAM,CACJ,IAAK,CAAC,kBAAmB,oBACzB,IAAK,CAAC,kBAAmB,mBACzB,CAAC,kBAAmB,mBACpB,IAAK,CAAC,mBAAoB,gBAE5B1E,OAAQ,CACN,CAAC,kBAAmB,oBACpB,CAAC,kBAAmB,mBACpB,CAAC,mBAAoB,gBAEvBE,MAAO,OAET,CACE3C,GAAI,EACJwC,KAAM,UACN2E,KAAM,CACJ,IAAK,CAAC,kBAAmB,eACzB,IAAK,CAAC,kBAAmB,mBACzB,CAAC,kBAAmB,oBACpB,IAAK,CAAC,mBAAoB,gBAE5B1E,OAAQ,CACN,CAAC,kBAAmB,eACpB,CAAC,kBAAmB,oBACpB,CAAC,mBAAoB,gBAEvBE,MAAO,WAIX,OAAO,SAAA5D,GACL,OAAOA,EAxEF,CAAEC,KAJU,eAIUC,QAwECsD,KM3CnBK,M,yCAGQC,GAAY,IACrBzC,EAAWsB,KAAKM,MAAhB5B,QACHyC,EAAUzC,OAAO0C,QAAU1C,EAAO0C,QACrCpB,KAAKH,SAAS,CAAE2F,aAAc9G,EAAO,O,8BAIjCmC,GACN,IAAME,EAASF,EAAKmB,OAAOJ,aAE3BvE,EADqB2C,KAAKM,MAAlBjD,UACCF,EAAO,CACdM,OAAQ,CAACsD,EAAOkB,IAAKlB,EAAOmB,KAC5BxE,KAAMmD,EAAKmB,OAAOT,QAAQ7D,U,kCAKlBgI,GACV1F,KAAKH,SAAS,CAAE2F,aAAcE,M,+BAGtB,IAAD,OACAtI,EAAO4C,KAAKM,MAAZlD,IACAoI,EAAgBxF,KAAKjC,MAArByH,aACA9G,EAAUsB,KAAKM,MAAf5B,OAEP,OACE,yBAAKuB,UAAU,WACb,yBAAKA,UAAU,uCACb,wBAAIA,UAAU,aAAd,UACA,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,SACf,+BACA,4BACE,oCACA,wBAAIA,UAAU,cAAd,aAGF,+BACCvB,EAAOtB,KAAI,SAACsI,GACX,OACE,wBAAItD,IAAKsD,EAAMpH,GAAI2B,UAAWuF,GAAgBE,EAAMpH,KAAOkH,EAAalH,GAAK,WAAa,IACxF,4BAAKoH,EAAM5E,MACX,wBAAIb,UAAU,cACZ,kBAACoC,EAAA,EAAD,CACEnC,QAAS,EAAKyF,YAAYpD,KAAK,EAAMmD,GACrCzE,MAAM,UACNuB,KAAK,KACLlF,KAAK,SACL2C,UAAU,kBACV,0BAAMA,UAAU,uBACd,uBAAGA,UAAU,2BAW/B,yBAAKA,UAAU,8BACb,kBAACyC,EAAA,EAAD,CAAKjF,OAAQL,EAAIK,OAAQC,KAAMN,EAAIM,KAAMiF,UAAW3C,KAAK4C,QAAQL,KAAKvC,OACpE,kBAAC6C,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,6CAELyC,GACC,kBAAC,EAAD,CAAOtB,UAAWsB,EAAaC,KAAMrB,OAAQ,CAACnD,MAAOuE,EAAavE,SAEnEuE,GAAgBA,EAAazE,QAC5ByE,EAAazE,OAAO3D,KAAI,SAACiB,EAAME,GAC7B,OACE,kBAACqH,EAAA,EAAD,CAAQxD,IAAK7D,EAAO0E,SAAU5E,GAC5B,kBAACwH,EAAA,EAAD,cAActH,c,GA1FdkC,e,ECbdqF,GACJ,kBAAC,IAAD,CAAQvG,QAASA,GACf,kBAAC,IAAD,CAAOwG,UAAWrG,GAChB,kBAAC,IAAD,CAAO+F,KAAK,IAAIM,UAAWrF,IAC3B,kBAAC,IAAD,CAAO+E,KAAK,UAAUM,UAAWR,OCLvCS,IAASC,OACP,kBAAC,IAAD,CAAU5G,MAAOA,GACdyG,IAEHI,SAASC,eAAe,U","file":"static/js/main.efcd3be3.chunk.js","sourcesContent":["// Actions\nconst UPDATE_MAP = 'UPDATE_MAP';\n\nexport function updateMap(payload) {\n  return { type: UPDATE_MAP, payload };\n}\n\n// Action Creators\nexport function update(map) {\n  return dispatch => {\n    return dispatch(updateMap(map))\n  }\n}\n\n// Reducer\nconst initialState = {\n  center: [55.205, 37.09],\n  zoom: 7,\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case 'UPDATE_MAP':\n      return Object.assign({}, action.payload);\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { routerReducer } from \"react-router-redux\";\nimport areasDuck from '../ducks/Areas';\nimport tracksDuck from '../ducks/Tracks';\nimport mapDuck from '../ducks/Map';\n\n// main reducers\nexport const reducers = combineReducers({\n  routing: routerReducer,\n  map: mapDuck,\n  areas: areasDuck,\n  tracks: tracksDuck,\n});\n","// Actions\nconst FETCH_AREAS = 'FETCH_AREAS';\nconst CREATE_AREAS = 'CREATE_AREAS';\nconst UPDATE_AREAS = 'UPDATE_AREAS';\nconst REMOVE_AREAS = 'REMOVE_AREAS';\n\n// Action Creators\nexport function fetchAreas(payload) {\n  return { type: FETCH_AREAS, payload };\n}\n\nexport function createAreas(payload) {\n  return { type: CREATE_AREAS, payload };\n}\n\nexport function updateAreas(payload) {\n  return { type: UPDATE_AREAS, payload };\n}\n\nexport function removeAreas(payload) {\n  return { type: REMOVE_AREAS, payload };\n}\n\n// export function getAll () {\n//   return dispatch => fetch('http://localhost:7070/jobs',{\n//     headers: { 'Content-Type': 'application/json' },\n//   })\n//     .then(function(response) {\n//       return response.text();\n//     })\n//     .then((response) => {\n//       const json = JSON.parse(response);\n//       dispatch(fetchAreas(json.data))\n//       return Promise.resolve()\n//     })\n//     .catch((error) => {\n//       return Promise.reject(error)\n//     })\n// }\n\nexport function getAll() {\n  const data = [\n    {id: 1, name: 'Green Circle', type: 'circle', latlng: [55.205, 37.09], radius: 20000, color: 'green'},\n    {id: 2, name: 'Blue Circle', type: 'circle', latlng: [56.205, 38.09], radius: 50000, color: 'blue'},\n    {id: 3, name: 'Red Polygone', type: 'polygon', latlng: [\n        [55.205, 37.09],\n        [55.904, 37.90],\n        [55.904, 34.90],\n        [55.205, 32.04]\n      ], color: 'red'}\n  ]\n\n  return dispatch => {\n    return dispatch(fetchAreas(data))\n  }\n}\n\nexport function create(area) {\n  return dispatch => {\n    return dispatch(createAreas(area))\n  }\n}\n\nexport function update(area) {\n  return dispatch => {\n    return dispatch(updateAreas(area))\n  }\n}\n\nexport function remove(area) {\n  return dispatch => {\n    return dispatch(removeAreas(area))\n  }\n}\n\n// Reducer\nexport default function reducer(state = [], action = {}) {\n  switch (action.type) {\n    case 'FETCH_AREAS':\n      return Object.assign([], action.payload);\n    case 'CREATE_AREAS':\n      return state.concat([action.payload]);\n    case 'UPDATE_AREAS':\n      return state.map((item) => {\n        if (item.id !== action.id) {\n          // This isn't the item we care about - keep it as-is\n          return item\n        }\n        // Otherwise, this is the one we want - return an updated value\n        return {\n          ...item,\n          ...action.payload\n        }\n      });\n    case 'REMOVE_AREAS':\n      const index = state.indexOf(action.payload)\n      return [...state.slice(0, index), ...state.slice(index + 1)]\n    default: return state;\n  }\n}\n","// Actions\nconst FETCH_TRACKS = 'FETCH_TRACKS';\n\n// Action Creators\nexport function fetchTracks(payload) {\n  return { type: FETCH_TRACKS, payload };\n}\n\nexport function getAll() {\n  const data = [\n    {\n      id: 1,\n      name: 'Track 1',\n      path: [\n        'M', [55.14874640066278, 37.106445312500002],\n        'Q', [55.67255514839676, 37.303710937500004],\n        [55.14874640066278, 37.676757812500004],\n        'T', [54.866316729538674, 36.0927734375]\n      ],\n      latlng: [\n        [55.14874640066278, 37.106445312500002],\n        [55.14874640066278, 37.676757812500004],\n        [54.866316729538674, 36.0927734375],\n      ],\n      color: 'green',\n    },\n    {\n      id: 2,\n      name: 'Track 2',\n      path: [\n        'M', [53.14874640066278, 33.106445312500002],\n        'Q', [57.67255514839676, 39.303710937500004],\n        [58.14874640066278, 33.676757812500004],\n        'T', [55.866316729538674, 36.0927734375]\n      ],\n      latlng: [\n        [53.14874640066278, 33.106445312500002],\n        [58.14874640066278, 33.676757812500004],\n        [55.866316729538674, 36.0927734375],\n      ],\n      color: 'blue'\n    },\n    {\n      id: 3,\n      name: 'Track 3',\n      path: [\n        'M', [53.14874640066278, 29.106445312500002],\n        'Q', [54.67255514839676, 33.303710937500004],\n        [55.14874640066278, 34.676757812500004],\n        'T', [57.866316729538674, 36.0927734375]\n      ],\n      latlng: [\n        [53.14874640066278, 29.106445312500002],\n        [55.14874640066278, 34.676757812500004],\n        [57.866316729538674, 36.0927734375],\n      ],\n      color: 'red',\n    },\n    {\n      id: 4,\n      name: 'Track 4',\n      path: [\n        'M', [55.14874640066278, 33.106445312500002],\n        'Q', [55.19255514839676, 32.303710937500004],\n        [55.14874640066278, 31.676757812500004],\n        'T', [54.866316729538674, 36.0927734375]\n      ],\n      latlng: [\n        [55.14874640066278, 33.106445312500002],\n        [55.14874640066278, 31.676757812500004],\n        [54.866316729538674, 36.0927734375],\n      ],\n      color: 'yellow'\n    }\n  ]\n\n  return dispatch => {\n    return dispatch(fetchTracks(data))\n  }\n}\n\n// Reducer\nexport default function reducer(state = [], action = {}) {\n  switch (action.type) {\n    case 'FETCH_TRACKS':\n      return Object.assign([], action.payload);\n    default: return state;\n  }\n}\n","// main saga generators\nexport function* sagas() {\n  //yield [];\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { browserHistory } from 'react-router';\nimport { syncHistoryWithStore, routerMiddleware } from 'react-router-redux';\nimport createSagaMiddleware from 'redux-saga';\n// import freeze from 'redux-freeze';\nimport { reducers } from './reducers/index';\nimport thunk from 'redux-thunk';\nimport { sagas } from './sagas/index';\n\n// add the middlewares\nlet middlewares = [thunk];\n\n// add the router middleware\nmiddlewares.push(routerMiddleware(browserHistory));\n\n// add the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\nmiddlewares.push(sagaMiddleware);\n\n// add the freeze dev middleware\n// if (process.env.NODE_ENV !== 'production') {\n//   middlewares.push(freeze);\n// }\n\n// apply the middleware\nlet middleware = applyMiddleware(...middlewares);\n\n// add the redux dev tools\nif (process.env.NODE_ENV !== 'production' && window.devToolsExtension) {\n  middleware = compose(middleware, window.devToolsExtension());\n}\n\n// create the store\nconst store = createStore(reducers, middleware);\nconst history = syncHistoryWithStore(browserHistory, store);\nsagaMiddleware.run(sagas);\n\nif (module.hot) {\n  module.hot.accept('./reducers/index', () => {\n    store.replaceReducer(require('./reducers/index').default)\n  })\n}\n\n// export\nexport { store, history };\n","import React from 'react';\nimport { Link } from 'react-router'\n\nimport '../assets/scss/argon-dashboard-react.scss'\n\nexport default class App extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n\n  openCollapse = () => {\n    this.setState({\n      collapseOpen: true\n    });\n  };\n\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n\n  render() {\n    const { collapseOpen } = this.state;\n    let navbar_classes = 'collapse navbar-collapse';\n    if (collapseOpen) {\n      navbar_classes += ' show';\n    }\n\n    return (\n      <section id='wrapper'>\n        <div id='sidenav-main' className='navbar-vertical fixed-left navbar-light bg-white navbar navbar-expand-md'>\n          <div className='container-fluid'>\n            <button className=\"navbar-toggler\" type=\"button\" onClick={this.openCollapse}>\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className={navbar_classes} onClick={this.closeCollapse}>\n              <div className=\"navbar-collapse-header d-md-none\">\n                <div className=\"row\">\n                  <div className=\"collapse-brand col-6\">\n                    <a href=\"/\">\n                      Menu\n                    </a>\n                  </div>\n                  <div className=\"collapse-close col-6\">\n                    <button className=\"navbar-toggler\" onClick={this.closeCollapse} type=\"button\"><span></span><span></span></button>\n                  </div>\n                </div>\n              </div>\n              <ul className=\"navbar-nav\">\n                <li className='nav-item'>\n                  <Link to='/' activeClassName='active' className='nav-link'>\n                    {/*<i className='ni ni-pin-3 text-orange' />*/}\n                    Areas\n                  </Link>\n                </li>\n                <li className='nav-item'>\n                  <Link to='/tracks' activeClassName='active' className='nav-link'>\n                    {/*<i className='ni ni-pin-3 text-orange' />*/}\n                    Tracks\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className='main-content'>\n          {this.props.children}\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport { Button } from 'reactstrap';\nimport { Map, Circle, TileLayer, Polygon, FeatureGroup } from 'react-leaflet';\nimport { EditControl } from 'react-leaflet-draw';\nimport './styles.scss';\nimport { connect } from 'react-redux';\nimport { getAll, create, remove } from '../../ducks/Areas';\nimport { update } from '../../ducks/Map';\n\nfunction mapStateToProps(state, props) {\n  const areas = state.areas;\n  const map = state.map;\n\n  return {\n    areas,\n    map\n  }\n}\n\n@connect(mapStateToProps)\n\nclass Area extends Component {\n  static propTypes = {\n    areas: PropTypes.array,\n    map: PropTypes.object,\n  };\n\n  state = {\n    currentArea: null,\n  };\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(getAll());\n  }\n\n  componentDidUpdate(prevProps) {\n    const { areas } = this.props;\n    if (!prevProps.areas.length && areas.length) {\n      this.setState({ currentArea: areas[0] })\n    }\n  }\n\n  _onCreate(data) {\n    const { areas, dispatch } = this.props;\n    const new_id = areas[areas.length - 1].id + 1;\n    const options = data.layer.options;\n    let newItem = {\n      id: new_id,\n      name: 'Figure ' + new_id,\n      type: data.layerType,\n      color: options.color,\n    };\n\n    if (data.layerType === 'circle') {\n      newItem.latlng = data.layer.getBounds().getCenter();\n      newItem.radius = options.radius;\n    } else if (data.layerType === 'polygon') {\n      newItem.latlng = data.layer.getLatLngs();\n    }\n\n    dispatch(create(newItem));\n    this.setState({ currentArea: newItem });\n\n    // prevent to show duplicate\n    data.layer.remove()\n\n    alert(newItem.latlng);\n  }\n\n  _onDrag(data) {\n    const latlng = data.target.getCenter();\n    const { dispatch } = this.props;\n    dispatch(update({\n      center: [latlng.lat, latlng.lng],\n      zoom: data.target.options.zoom,\n    }))\n  }\n\n  deleteArea(area) {\n    const { areas, dispatch } = this.props;\n    dispatch(remove(area));\n    if (!this.state.currentArea || this.state.currentArea.id === area.id) {\n      this.setState({ currentArea: areas.filter(item => item.id !== area.id)[0] })\n    }\n  }\n\n  selectArea(area) {\n    this.setState({ currentArea: area })\n  }\n\n  render() {\n    const { map } = this.props;\n    const { currentArea } = this.state;\n    const { areas } = this.props;\n    return (\n      <div className='row m-0'>\n        <div className='contant-container col-md-4 p-0 pt-3'>\n          <h3 className='mb-3 ml-3'>Areas</h3>\n          <div className='table-responsive'>\n            <table className='table'>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th className='text-right'>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {areas.map((area) => {\n                  return (\n                    <tr key={area.id} className={currentArea && area.id === currentArea.id ? 'bg-white' : ''}>\n                      <td>{area.name}</td>\n                      <td className='text-right'>\n                        <Button\n                          onClick={this.selectArea.bind(this, area)}\n                          color='success'\n                          size='sm'\n                          type='button'\n                          className='btn-icon btn-2'>\n                          <span className=\"btn-inner--icon m-0\">\n                            <i className='ni ni-pin-3'></i>\n                          </span>\n                        </Button>\n                        <Button\n                          onClick={this.deleteArea.bind(this, area)}\n                          color='danger'\n                          size='sm'\n                          type='button'\n                          className='btn-icon btn-2'>\n                          <span className=\"btn-inner--icon m-0\">\n                            <i className='ni ni-fat-remove'></i>\n                          </span>\n                        </Button>\n                      </td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n            {currentArea && (\n              <div className='p-3'>\n                <Button\n                  onClick={this.selectArea.bind(this, null)}\n                  className='w-100'\n                  color='primary'\n                  size='md'\n                  type='button'>Create new area</Button>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className='map-container col-md-8 p-0'>\n          <Map center={map.center} zoom={map.zoom} onDragend={this._onDrag.bind(this)}>\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n            />\n            <FeatureGroup>\n              <EditControl\n                position='topright'\n                onEdited={this._onEditPath}\n                onCreated={this._onCreate.bind(this)}\n                onDeleted={this._onDeleted}\n                draw={{\n                  polygon: !currentArea,\n                  circle: !currentArea,\n                  rectangle: false,\n                  polyline: false,\n                  circlemarker: false,\n                  marker: false\n                }}\n                edit={{\n                  edit: false,\n                  remove: false,\n                }}/>\n            </FeatureGroup>\n            {currentArea && currentArea.type === 'circle' && (\n              <Circle\n                center={currentArea.latlng}\n                radius={currentArea.radius}\n                color={currentArea.color} />\n            )}\n            {currentArea && currentArea.type === 'polygon' && (\n              <Polygon\n                positions={currentArea.latlng}\n                color={currentArea.color} />\n            )}\n          </Map>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Area;\n","import L from \"leaflet\"\nimport PropTypes from \"prop-types\";\nimport { Path, withLeaflet } from \"react-leaflet\";\nimport {} from \"leaflet-curve\";\n\nclass Curve extends Path {\n  createLeafletElement(props) {\n    const { positions, option, ...options } = props;\n    return L.curve(positions, option, this.getOptions(options));\n  }\n\n  updateLeafletElement(fromProps, toProps) {\n    if (toProps.positions !== fromProps.positions) {\n      this.leafletElement.setPath(toProps.positions);\n    }\n    this.setStyleIfChanged(fromProps, toProps);\n  }\n}\n\nCurve.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  option: PropTypes.object,\n  positions: PropTypes.array.isRequired\n};\n\nexport default withLeaflet(Curve);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport { Button } from 'reactstrap';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Curve } from '../Curve';\nimport './styles.scss';\nimport { connect } from 'react-redux';\nimport { getAll } from '../../ducks/Tracks';\nimport { update } from '../../ducks/Map';\n\nfunction mapStateToProps(state) {\n  const tracks = state.tracks;\n  const map = state.map;\n\n  return {\n    tracks,\n    map\n  }\n}\n\n@connect(mapStateToProps)\n\nclass Track extends Component {\n  static propTypes = {\n    tracks: PropTypes.array,\n    map: PropTypes.object,\n  };\n\n  state = {\n    currentTrack: null,\n  };\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(getAll());\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tracks } = this.props;\n    if (!prevProps.tracks.length && tracks.length) {\n      this.setState({ currentTrack: tracks[0] })\n    }\n  }\n\n  _onDrag(data) {\n    const latlng = data.target.getCenter();\n    const { dispatch } = this.props;\n    dispatch(update({\n      center: [latlng.lat, latlng.lng],\n      zoom: data.target.options.zoom,\n    }))\n  }\n\n\n  selectTrack(track) {\n    this.setState({ currentTrack: track })\n  }\n\n  render() {\n    const {map} = this.props;\n    const {currentTrack} = this.state;\n    const {tracks} = this.props;\n\n    return (\n      <div className='row m-0'>\n        <div className='contant-container col-md-3 p-0 pt-3'>\n          <h3 className='mb-3 ml-3'>Tracks</h3>\n          <div className='table-responsive'>\n            <table className='table'>\n              <thead>\n              <tr>\n                <th>Name</th>\n                <th className='text-right'>Actions</th>\n              </tr>\n              </thead>\n              <tbody>\n              {tracks.map((track) => {\n                return (\n                  <tr key={track.id} className={currentTrack && track.id === currentTrack.id ? 'bg-white' : ''}>\n                    <td>{track.name}</td>\n                    <td className='text-right'>\n                      <Button\n                        onClick={this.selectTrack.bind(this, track)}\n                        color='success'\n                        size='sm'\n                        type='button'\n                        className='btn-icon btn-2'>\n                        <span className=\"btn-inner--icon m-0\">\n                          <i className='ni ni-pin-3'></i>\n                        </span>\n                      </Button>\n                    </td>\n                  </tr>\n                )\n              })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='map-container col-md-9 p-0'>\n          <Map center={map.center} zoom={map.zoom} onDragend={this._onDrag.bind(this)}>\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n            />\n            {currentTrack && (\n              <Curve positions={currentTrack.path} option={{color: currentTrack.color}} />\n            )}\n            {currentTrack && currentTrack.latlng && (\n              currentTrack.latlng.map((item, index) => {\n                return (\n                  <Marker key={index} position={item}>\n                    <Popup>Point {index}</Popup>\n                  </Marker>\n                )\n              })\n            )}\n          </Map>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Track;\n","import React from \"react\";\nimport { Router, Route } from \"react-router\";\nimport { history } from \"./store.js\";\n\nimport App from './layouts/App';\nimport Area from \"./components/Area\";\nimport Track from \"./components/Track\";\n\n// build the router\nconst router = (\n  <Router history={history}>\n    <Route component={App}>\n      <Route path=\"/\" component={Area} />\n      <Route path=\"/tracks\" component={Track} />\n    </Route>\n  </Router>\n);\n\n// export\nexport { router };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store.js\";\nimport { router } from \"./router.js\";\n//import * as serviceWorker from './serviceWorker';\n\n// render the main component\nReactDOM.render(\n  <Provider store={store}>\n    {router}\n  </Provider>,\n  document.getElementById('app')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}